bioguide: federalregister_ed_241202
contact_form:
  method: POST
  action: "https://api.regulations.gov/v4/comments"
  steps:
    - visit: "https://www.federalregister.gov/documents/2024/10/31/2024-25067/student-debt-relief-based-on-hardship-for-the-william-d-ford-federal-direct-loan-program-direct#open-comment" #TODO: swap on new yamls
    - javascript:
        - value: "document.querySelector('.comment_wrapper').style.display = 'block'"
    - click_on:
        - selector: "#start_comment"
    - javascript:
        - value: "document.querySelector('div.comment-form-fields-js').classList.remove('cj-hidden')"
    - javascript:
        - value: "document.querySelector('div.comment-form-fields-js').style.display = 'block'"    
    - wait:
        - value: 3
    - find:
        - selector: "textarea[name='comment[comment]']"
    - wait:
        - value: 5
    - fill_in:
        - selector: "textarea[name='comment[comment]']"
          name: "comment[comment]"
          value: $MESSAGE
          required: true
          options:
            max_length: 2000
    - click_on:
        - selector: "div[data-submitter-type='individual'] input[type='radio']"        
    - javascript:
        - value: "document.querySelector('div.submitter-section-js[data-submitter-type=\"individual\"]').classList.remove('cj-hidden');"
    - javascript:
        - value: "$('#comment_submitterType').val('INDIVIDUAL');"
    - javascript:
        - value: "$('input[name=\"comment[commentOnDocumentId]\"]').val(\"ED-2023-OPE-0123-32489\")" # TODO: swap on new yamls
    - fill_in:
        - name: "comment[firstName]"
          selector: "input[name='comment[firstName]']"
          value: $NAME_FIRST
          required: true
        - name: "comment[lastName]"
          selector: "input[name='comment[lastName]']"
          value: $NAME_LAST
          required: true
        - name: "comment[email]"
          selector: "input[name='comment[email]']"
          value: $EMAIL
          required: true
        - name: "comment[city]"
          selector: "input[name='comment[city]']"
          value: $ADDRESS_CITY
          required: true
        - name: "comment[zip]"
          selector: "input[name='comment[zip]']"
          value: $ADDRESS_ZIP5
          required: true       
    - select:
        - name: "comment[stateProvinceRegion]"
          selector: "select[name='comment[stateProvinceRegion]']"
          value: $ADDRESS_STATE_POSTAL_ABBREV
          required: true
          options:
            Alabama: AL
            Alaska: AK
            American Samoa: AS
            Arizona: AZ
            Arkansas: AR
            California: CA
            Colorado: CO
            Connecticut: CT
            Delaware: DE
            District of Columbia: DC
            Florida: FL
            Georgia: GA
            Guam: GU
            Hawaii: HI
            Idaho: ID
            Illinois: IL
            Indiana: IN
            Iowa: IA
            Kansas: KS
            Kentucky: KY
            Louisiana: LA
            Maine: ME
            Marshall Islands: MH
            Maryland: MD
            Massachusetts: MA
            Michigan: MI
            Minnesota: MN
            Mississippi: MS
            Missouri: MO
            Montana: MT
            Nebraska: NE
            Nevada: NV
            New Hampshire: NH
            New Jersey: NJ
            New Mexico: NM
            New York: NY
            North Carolina: NC
            North Dakota: ND
            Northern Marianas Islands: MP
            Ohio: OH
            Oklahoma: OK
            Oregon: OR
            Palau: PW
            Pennsylvania: PA
            Puerto Rico: PR
            Rhode Island: RI
            South Carolina: SC
            South Dakota: SD
            Tennessee: TN
            Texas: TX
            Utah: UT
            Vermont: VT
            Virgin Islands: VI
            Virginia: VA
            Washington: WA
            West Virginia: WV
            Wisconsin: WI
            Wyoming: WY
        - name: "comment[country]"
          selector: "select[name='comment[country]']"
          value: "United States"
          required: true 
    - check:
        - name: "comment[confirm_submission]"
          selector: "input[name='comment[confirm_submission]']"
          value: "1"
          required: true
    - javascript:
        - value: "Array.prototype.forEach.call(document.querySelectorAll('style,[rel~=\"stylesheet\"],[type=\"text/css\"]'), function(element){ try{ element.parentNode.removeChild(element) } catch(err){} });"
    - javascript:
        - value: "document.querySelector('input[name=\"comment[secret]\"]').type = 'text'"
    - fill_in: 
        - name: "comment[secret]"
          selector: "input[name='comment[secret]']"
          value: "3spdljehnxn" # TODO: swap on new yamls
          required: true 
    - find:
        - selector: ".header"
    - javascript:
        - value: "$.ajax({ crossDomain: true, contentType: 'application/vnd.api+json', excludeCsrfTokenHeader: true, headers: { 'x-api-key': $('#new_comment').data('api-key') }, url: 'https://api.regulations.gov/v4/comments', type: 'POST', data: JSON.stringify({ data: { attributes: $('#new_comment').serializeArray().reduce((function(e, n) { return n.value && (i = n.name.match(/comment.([a-zA-Z0-9_]*)./)) && (['comment[sendEmailReceipt]'] == n.name ? (r = 'input[name =' + n.name + ']', a = $(r).is(':checked')) : a = n.value, e[i[1]] = a), e } ), {}), type: 'comments' } }), success: function(t) { $('.header').append('done1suc1') }, error: function(j, t, e) { $('.header').append(j.responseText) } }).always(function(e) { $('.header').append('done1') }).done(function(e) { $.ajax({ url: '/my/documents/' + $('#new_comment').data('document-number') + '/comments', type: 'POST', dataType: 'html', data: { reg_gov_response_data: e.data }, success: function(t) { $('.header').append(t) }, headers: { 'X-CSRFToken': $('meta[name=csrf-token]').attr('content') }, error: function(j, t, e) { $('.header').append(j.responseText) } }).done(function(e) { $('.header').append('done2suc2') }).always(function(e) { $('.header').append('done2') }) });"
    - javascript:
        - value: "Array.prototype.forEach.call(document.querySelectorAll('style,[rel~=\"stylesheet\"],[type=\"text/css\"]'), function(element){ try{ element.parentNode.removeChild(element) } catch(err){} });"
    - javascript:
        - value: "document.querySelector('div.comment_form_wrapper .notice').style.display = 'block'"
    - wait:
        - value: 10
    - find:
        - selector: ".header div.comment_form_wrapper .notice"
  success:
    headers:
      status: 200
    body:
      contains: Thank you! Your comment has been submitted

